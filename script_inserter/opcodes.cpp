#include <cstdio>
#include "opcodes.h"

constexpr Opcode UNUSED{ "", "__UNUSED__", OpcodeFlags::INVALID, 0, 0 };

static constexpr Opcode OP(const char *args, const char *alias = nullptr, OpcodeFlags flags = OpcodeFlags::NORMAL, int string_char_max = 0, int string_half_max = 0) {
	return { args, alias, flags, string_char_max, string_half_max };
}

const Opcode optable[5][0x100]{
	{
		// 0x0000
		UNUSED,
		OP("hhe", "setvar", OpcodeFlags::HAS_PARSE),
		OP("le", "jumpz"),
		OP("l", "goto", OpcodeFlags::END),
		OP("", "done", OpcodeFlags::END),
		OP("e", "gotomap"),
		OP("e"),
		OP("l", "call"),
		OP("", "ret", OpcodeFlags::END),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP(""),
		UNUSED,
		UNUSED,
	},
	{
		// 0x0100
		OP(""),
		OP(""),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP(""),
		OP(""),
		UNUSED,
		UNUSED,
		OP(""),
		OP(""),
		UNUSED,
		UNUSED,
		// 0x0110
		OP(""),
		OP(""),
		OP(""),
		OP(""),
		OP(""),
		OP("e"),
		UNUSED,
	},
	{
		// These are not well analyzed.
		// 0x0200
		OP(""),
		OP(""),
		UNUSED,
		OP("h"), // Might be l, did not check.
		OP("e"),
		UNUSED,
		UNUSED,
		UNUSED,
		OP("e"),
		UNUSED,
		OP("ee"),
		OP("eee"),
		OP(""),
		OP("ee"),
		OP(""),
		OP(""),
		// 0x0210
		OP("eeeeeee"),
		OP("eeee"),
		OP("ee"),
		OP("eeee"),
		OP("eeee"),
		UNUSED,
		OP("eeee"),
		OP("eeeee"),
		UNUSED,
		UNUSED,
		UNUSED,
		OP("e"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		// 0x0220
		OP("eeeeeeee"),
		OP("eeee"),
		OP("ee"),
		OP("eeeeeee"),
		OP("e"),
		OP("e"),
		OP("eeee"),
		UNUSED,
		UNUSED,
		OP("eeeeeeeee"),
		UNUSED,
		OP(""),
		OP("e"),
		UNUSED,
		OP(""),
		OP("e"),
		// 0x0230
		OP("eeeeeee"),
		OP(""),
		OP("e"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP("e"),
		OP("e"),
		OP(""),
		OP("e"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		// 0x0240
		OP("eee"),
		OP(""),
		OP(""),
		UNUSED,
		OP("eee"),
		OP("eee"),
		OP("e"),
		UNUSED,
		OP(""),
		UNUSED,
		OP(""),
		OP(""),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		// 0x0250
		OP(""),
		OP("e"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
	},
	{
		// 0x0300
		OP(""),
		OP("ee"),
		OP("e"),
		OP(""),
		OP("e"),
		OP("e"),
		UNUSED,
		OP("es", "setname", OpcodeFlags::NORMAL, 0, 9),
		OP("s", "dialogtxt", OpcodeFlags::NORMAL, 0, 20),
		OP(""),
		OP("ee"),
		OP("eeeees", "dialogbig", OpcodeFlags::NORMAL, 32),
		OP(""),
		OP("ls", "choicetxt", OpcodeFlags::NORMAL, 0, 0),
		OP("", "choicewait", OpcodeFlags::END),
		UNUSED,
		// 0x0310
		UNUSED,
		OP("s", "menutitle", OpcodeFlags::NORMAL, 0, 0),
		OP(""),
		OP("l"),
		OP("ls", "menutxt", OpcodeFlags::NORMAL, 0, 0),
		OP("", "menuwait", OpcodeFlags::END),
		OP("es", "strlen", OpcodeFlags::NORMAL, 0, 0),
		OP("s", "popuptxt", OpcodeFlags::NORMAL, 0, 0),
		OP(""),
		UNUSED,
		OP("e"),
		OP("eeeee"),
		OP("ee"),
		OP("ee"),
		UNUSED,
		OP("e"),
		// 0x0320
		OP("ee"),
		OP("ee"),
		UNUSED,
		OP("eee"),
		OP("ee"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP(""),
		// 0x0330
		OP(""),
		OP("ee"),
		OP(""),
		OP("ee"),
		OP(""),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP("ee"),
		OP("eeeeee"),
		OP("eeeeeee"),
		OP("e"),
		OP("e"),
		UNUSED,
		// 0x0340
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP(""),
		OP(""),
		OP(""),
		OP(""),
		OP(""),
		OP(""),
		OP("eee"),
		OP(""),
		OP(""),
		OP(""),
		OP(""),
		// 0x0350
		OP("ee"),
		OP(""),
		OP(""),
		OP("e"),
		OP("ee"),
		OP(""),
		OP(""),
		OP(""),
		OP(""),
		OP("e"),
		OP(""),
		OP("e"),
		OP(""),
		OP(""),
		OP("e"),
		UNUSED,
		// 0x0360
		UNUSED,
		OP("e"),
		OP("e"),
		OP("s", "placetxt", OpcodeFlags::NORMAL, 0, 19),
		OP("e"),
		OP(""),
		OP("ee"),
		OP(""),
		OP(""),
		OP(""),
		OP("e"),
		UNUSED,
		OP("ee"),
		OP(""),
		OP(""),
		OP(""),
		// 0x0370
		OP(""),
		UNUSED,
		UNUSED,
		UNUSED,
		OP("e"),
		OP("e"),
		OP("e"),
		OP("ee"),
		UNUSED,
		OP("e"),
		OP(""),
		OP("ee"),
		OP("e"),
		UNUSED,
		UNUSED,
		OP("e"),
		// 0x0380
		OP("e"),
		OP("e"),
		OP("e"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP("e"),
		OP("e"),
		OP(""),
		OP(""),
		OP(""),
		OP("e"),
		OP("e"),
		OP("ee"),
	},
	{
		// 0x0400
		OP(""),
		OP(""),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP("e"),
		OP(""),
		OP(""),
		OP("", nullptr, OpcodeFlags::END),
		OP("el"),
		OP("e"),
		UNUSED,
		UNUSED,
		// 0x0410
		OP("eeee"),
		OP(""),
		OP("ee"),
		UNUSED,
		OP("eee"),
		OP("eee"),
		OP("eee"),
		UNUSED,
		OP("e"),
		OP("eeeeee"),
		OP("ee"),
		OP("e"),
		OP("eeee"),
		OP(""),
		UNUSED,
		UNUSED,
		// 0x0420
		OP("eee"),
		OP("e"),
		OP("ee"),
		UNUSED,
		OP("eeeeee"),
		UNUSED,
		OP("ee"),
		UNUSED,
		OP("eeee"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		// 0x0430
		OP("e"),
		OP("eeeee"),
		OP("eeee"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP("eeee"),
		OP("e"),
		OP("eee"),
		OP("e"),
		OP("ee"),
		OP("eee"),
		OP("eee"),
		OP("e"),
		// 0x0440
		OP("eeee", "walkto"),
		OP("e", "walkwait"),
		OP("el"),
		OP("eee"),
		OP("ee"),
		OP("ee"),
		OP("e"),
		OP("ee"),
		OP("ee"),
		UNUSED,
		OP("e"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		// 0x450
		OP("eee"),
		OP("e"),
		OP("eee"),
		OP("ele"),
		UNUSED,
		UNUSED,
		UNUSED,
		OP("ee"),
		OP("ee"),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		// 0x0460
		OP("ele", "mapev"),
		OP("e"),
		OP("eeeee", "mapevpos", OpcodeFlags::HAS_PARSE),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP("e"),
		UNUSED,
		UNUSED,
		UNUSED,
		OP("e"),
		OP("ee"),
		OP("eee"),
		OP("eee"),
		// 0x0470
		OP("eee"),
		OP("ee"),
		OP("ee"),
		OP("ee"),
		UNUSED,
		OP(""),
		OP("eee"),
		UNUSED,
		OP("ee"),
		OP("eee"),
		OP("eee"),
		OP(""),
		OP("ee"),
		OP("ee"),
		OP("ee"),
		OP("e"),
		// 0x0480
		OP("eeee"),
		OP("e"),
		OP(""),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP("ee"),
		OP("eee"),
		OP("ee"),
		OP("eee"),
		OP(""),
		OP("ee"),
		OP(""),
		OP("e"),
		// 0x0490
		OP("e"),
		OP("e"),
		OP(""),
		OP(""),
		UNUSED,
		UNUSED,
		UNUSED,
		UNUSED,
		OP("eeeee"),
		UNUSED,
		OP("eee"),
		OP("eeeeee"),
		OP("e"),
		UNUSED,
		UNUSED,
		UNUSED,
		// 0x04A0
		OP(""),
		OP(""),
		OP(""),
		OP(""),
		OP(""),
		UNUSED,
	},
};

std::unordered_map<std::string, uint16_t> oplookup = [] {
	std::unordered_map<std::string, uint16_t> m;
	for (int h = 0; h < 5; ++h) {
		for (int l = 0; l < 0x100; ++l) {
			if (optable[h][l].flags & OpcodeFlags::INVALID) {
				continue;
			}

			uint16_t code = (h << 8) | l;
			if (optable[h][l].alias) {
				m.emplace(optable[h][l].alias, code);
			}
			char key[16];
			snprintf(key, sizeof(key), "code%04x", code);
			m.emplace(key, code);
		}
	}
	return m;
}();
